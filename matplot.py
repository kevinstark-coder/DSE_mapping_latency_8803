import matplotlib.pyplot as plt
import numpy as np

# 假设的数据                                   #band,stall,total
ratios = [0.2, 0.4, 0.6, 0.8]                 #input_r                                                                        1                                          2                                       3                                4
values_020 = [5, 4.996194478045541, 4.99269522878686, 4.981862533297755]                                   # 替换为你的数据 fil   1   5.0  28795.0  64783.0               4.996194478045541  35454.0  71442.0      4.99269522878686  47019.0  83007.0      4.981862533297755  97786.0  133774.0
values_040 = [4.994489191022145, 4.9925553786302785, 4.99001168069454, 4.982584280394075]                  # 替换为你的数据       2 4.994489191022145  68136.0  104124.0   4.9925553786302785  74795.0  110783.0    4.99001168069454  86360.0  122348.0    4.982584280394075  137127.0  173115.0
values_060 = [4.993036677031055, 4.989711602411937, 4.984240394120404,4.982584280394075]                   # 替换为你的数据       3 4.993036677031055  11006.0  46994.0     4.989711602411937  17665.0  53653.0   4.984240394120404  29230.0  65218.0   4.975972518535457  79997.0  115985.0
values_080 = [4.984789792405252, 4.983635144931421, 4.9764, 4.972234]                                      # 替换为你的数据       4 4.984789792405252  10820.0  46808.0  4.983635144931421  17479.0  53467.0     4.976379993843927  29044.0  65032.0   4.972234931654767  79811.0  115799.0   

#-------------------Stall
# ratios = [0.2, 0.4, 0.6, 0.8]                 #input_r                                                                        1                                          2                                       3                                4
# values_020 = [28795.0,35454.0, 47019.0,   97786.0 ]                                   # 替换为你的数据 fil   1   5.0  28795.0  64783.0               4.996194478045541  35454.0  71442.0      4.99269522878686  47019.0  83007.0      4.981862533297755  97786.0  133774.0
# values_040 = [68136.0  , 74795.0, 86360.0 , 137127.0]                  # 替换为你的数据       2 4.994489191022145  68136.0  104124.0   4.9925553786302785  74795.0  110783.0    4.99001168069454  86360.0  122348.0    4.982584280394075  137127.0  173115.0
# values_060 = [11006.0 ,  17665.0,  29230.0, 79997.0]                   # 替换为你的数据       3 4.993036677031055  11006.0  46994.0     4.989711602411937  17665.0  53653.0   4.984240394120404  29230.0  65218.0   4.975972518535457  79997.0  115985.0
# values_080 = [10820.0, 17479.0, 29044.0,  79811.0 ]                                                   # 替换为你的数据       4 4.984789792405252  10820.0  46808.0  4.983635144931421  17479.0  53467.0     4.976379993843927  29044.0  65032.0   4.972234931654767  79811.0  115799.0   
#------------------------minimum compute cycle
   #input_r                  1         2             3               4
# 替换为你的数据 fil   1    64783.0      71442.0       83007.0       133774.0
# 替换为你的数据       2    104124.0      110783.0      122348.0      173115.0
# 替换为你的数据       3  46994.0       53653.0    65218.0     115985.0
# 替换为你的数据       4   46808.0    53467.0       65032.0   115799.0   


barWidth = 0.01
r1 = [0.2, 0.4, 0.6, 0.8]
r2 = [x + barWidth for x in r1]
r3 = [x + barWidth for x in r2]
r4 = [x + barWidth for x in r3]
plt.bar(r1, values_020, color='skyblue', width=barWidth, edgecolor='grey', label='0.2   filter L1/(L1+L2) ratio')
plt.bar(r2, values_040, color='yellow', width=barWidth, edgecolor='grey', label='0.4')
plt.bar(r3, values_060, color='blue', width=barWidth, edgecolor='grey', label='0.6')
plt.bar(r4, values_080, color='red', width=barWidth, edgecolor='grey', label='0.8')

# # 添加图例
plt.legend()

# # 添加x轴的标签
plt.xlabel('Ifmap L1/(L1+L2) ratio', fontweight='bold')
plt.ylabel('Average Bandwdith', fontweight='bold')
plt.ylim(4.8,5)
plt.show()

#--------------------------Step3
'''
x = np.linspace(1,9, 9)
#Average Bandwidth
y1=[4.984789792405252,4.979020669500971,4.965009431896716,4.9851180601935505,4.979865433015654,4.966721165946053,4.984013038064984,4.978180814889585,4.96362475]
#Stall cycles
y2=[10820,10820,10820,0,0,0,4914,4847,4774]
plt.ylim(4.9,5)
plt.bar(x, y1, color='skyblue', width=0.3, edgecolor='grey')
plt.xlabel('Configuration', fontweight='bold')
plt.ylabel('Average Bandwidth', fontweight='bold')

plt.grid()
plt.show()

plt.bar(x, y2, color='green', width=0.3,  edgecolor='grey')
plt.xlabel('Configuration', fontweight='bold')
plt.ylabel('Stall Sum', fontweight='bold')
plt.grid()
plt.show()
'''